<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAmbilData.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>